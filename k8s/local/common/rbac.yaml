apiVersion: rbac.authorization.k8s.io/v1
kind: Role # namespace scoped | CluserRole is cluster scoped (could have used ClusterRole with a RoleBinding scoped within a namespace in order to reuse the role)
metadata:
  name: cluster-read-role
  namespace: java-demo # only use this field for Role (ns scoped)
rules:
  - apiGroups: [""]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cluster-read-rolebinding
  #  Scope this binding to a specific namespace
  namespace: java-demo
# The Target: User, Account, Group etc.
subjects:
  - kind: ServiceAccount
    name: default # default service created at pod level
    namespace: java-demo
# The Role
roleRef:
  kind: Role
  name: cluster-read-role
  apiGroup: rbac.authorization.k8s.io
