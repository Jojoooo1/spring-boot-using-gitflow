name: CI for release branch

on:
  pull_request:
    branches: [release-v*]

  push:
    branches: [release-v*]

jobs:
  release-verify-build:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Sets env_variable"
        run: |
          echo "::set-env name=RELEASE_VERSION::${GITHUB_REF##*-v}"
          echo "RELEASE_VERSION: $RELEASE_VERSION"

      # Test
      - name: Build with Maven
        run: mvn clean verify -P all-test

      # TODO: on push failure send notification
      #
      # Can use Sonar
      # Or can use PMD, FindBugs and Checkstyle
      # Can add dependency scanning

  release-build-image:
    if: github.event_name == 'push' && "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    needs: release-verify-build
    steps:
      - name: Sets Maven Release Candidate version
        run: mvn versions:set -DnewVersion=${{ RELEASE_VERSION }}.RC-${{ github.sha }}
      - name: Build & Push Release Candidate to Docker repository
        run: mvn compile -Pstaging jib:build -Djib.to.auth.password=${{ secrets.DOCKER_PASSWORD }}

  release-deploy-image:
    if: github.event_name == 'push' && "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    needs: release-build-image
    steps:
      - name: Deploy to Kubernetes
        run: mvn
    # - run: mkdir staging && cp target/*.jar staging
    #   if: github.event_name == 'push'
    # - name: Upload Maven build artifact
    #   if: github.event_name == 'push'
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: Package
    #     path: staging
