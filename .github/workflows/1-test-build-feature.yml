name: "Build & Test"

# Every time a pull request is open and a merge is executed in develop this CI will be triggered

on:
  # GitHub sends the pull_request event to the base repository and 
  # no pull request events occur on the forked repository.
  pull_request:
    types: [opened, synchronize, reopened] # d.
    branches: [develop]
  #
  # Verify again when branch is merged
  push:
    branches: [develop]

jobs:
  feature-test-build:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    steps:
      # Setup project
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Test project
      - name: Run Unit & Integration Test
        run: mvn clean verify -P all-test
      # TODO: on push failure send notification


# name: "Code Scanning - Action"

# on:
#   push:
#   # schedule:
#   #   - cron: '0 0 * * 0'

# jobs:
#   CodeQL-Build:

#     # CodeQL runs on ubuntu-latest, windows-latest, and macos-latest
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       # Initializes the CodeQL tools for scanning.
#       - name: Initialize CodeQL
#         uses: github/codeql-action/init@v1
#         with:
#           languages: java


#       - name: Run Unit & Integration Test
#         run: mvn clean verify

#       - name: Perform CodeQL Analysis
#         uses: github/codeql-action/analyze@v1