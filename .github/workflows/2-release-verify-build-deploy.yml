name: CI for building and deploying release candidate image to staging

on:
  pull_request:
    branches: [master] # d. (opened, synchronize, or reopened)

env: 
  DOCKER_USERNAME: jojoooo1
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE : carros

jobs:
  release-verify-build:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Sets env_variable"
        run: |
          echo "::set-env name=SOURCE_BRANCH::$(echo ${GITHUB_REF##*/})"
          echo "SOURCE_BRANCH: $SOURCE_BRANCH"

      # Verifies UT & IT
      - name: Build with Maven
        run: mvn clean verify -P all-test

      # TODO: on push failure send notification
      #
      # Can use Sonar
      # Or can use PMD, FindBugs and Checkstyle
      # Can add dependency scanning

  # release-build-image:
  #   if: github.event_name == 'push' && "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
  #   runs-on: ubuntu-latest
  #   needs: release-verify-build
  #   steps:
  #     - name: "echo RELEASE_VERSION"
  #       run: |
  #         echo "::set-env name=RELEASE_VERSION::${GITHUB_REF##*-}"
  #         echo "RELEASE_VERSION: $RELEASE_VERSION"

  #     - name: Sets Release Candidate version in pom.xml
  #       run: mvn versions:set -DnewVersion=${{  RELEASE_VERSION }}.rc-${{ github.sha }}

  #     - name: Build & Push Release Candidate to Docker repository
  #       run: |
  #         mvn compile -P staging jib:build \
  #           -Djib.to.auth.username=${{ DOCKER_USERNAME }} \
  #           -Djib.to.image=docker.io/${{ DOCKER_USERNAME }}/${{ DOCKER_IMAGE }} \
  #           -Djib.to.auth.password=${{ DOCKER_PASSWORD }} \
  #           -Djib.to.tags=${{ RELEASE_VERSION }}.rc-${{ github.sha }}
  #     - name: Commit changes to $SOURCE_BRANCH
  #       run: |
  #         git diff
  #         git add -am "Pushed Release Canditate image: ${{ RELEASE_VERSION }}.rc-${{ github.sha }}"
  #         git push origin $SOURCE_BRANCH
